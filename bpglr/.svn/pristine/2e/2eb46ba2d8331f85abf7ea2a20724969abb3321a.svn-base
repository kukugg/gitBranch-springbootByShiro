package com.bpglr.index.controller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationException;
import org.apache.shiro.authc.IncorrectCredentialsException;
import org.apache.shiro.authc.LockedAccountException;
import org.apache.shiro.authc.UnknownAccountException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.subject.Subject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.bpglr.index.service.UserInfoService;
import com.bpglr.utils.R;
import com.bpglr.utils.ShiroUtils;

/**
 * @Title:HomeController
 * @Description:	
 * @Author hjp	
 * @Date 2018年6月1日
 */
@Controller
public class HomeController {
	
	private static final Logger log = LoggerFactory.getLogger(HomeController.class);

	@RequestMapping({"/","/index"})
    public String index(){
       return "/index";
    }
	
    @RequestMapping("/login")
    public String login() {
        return "login";
    }
   
    @RequestMapping(value="/loginUser",method = RequestMethod.POST)
    @ResponseBody
    public R loginUser(String username, String password){
    	// 登录失败从request中获取shiro处理的异常信息。  
    	try{
			Subject subject = ShiroUtils.getSubject();
			UsernamePasswordToken token = new UsernamePasswordToken(username, password);
			subject.login(token);
		}catch (UnknownAccountException e) {
			return R.error(e.getMessage());
		}catch (IncorrectCredentialsException e) {
			log.info("IncorrectCredentialsException -- > 账号或密码不正确：");
			return R.error("账号或密码不正确");
		}catch (LockedAccountException e) {
			log.info("LockedAccountException -- > 账号已被锁定,请联系管理员：");
			return R.error("账号已被锁定,请联系管理员");
		}catch (AuthenticationException e) {
			log.info("AuthenticationException -- > 账户验证失败：");
			return R.error("账户验证失败");
		}
         return R.ok();
    }
    
    @RequestMapping("/logOut")
    public String logOut(HttpSession session) {
        Subject subject = SecurityUtils.getSubject();
        subject.logout();
        return "login";
    }

}
