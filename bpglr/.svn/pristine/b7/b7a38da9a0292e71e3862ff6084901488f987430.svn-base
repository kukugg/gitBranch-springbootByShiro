package com.bpglr.index.controller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.shiro.authc.IncorrectCredentialsException;
import org.apache.shiro.authc.UnknownAccountException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.bpglr.index.service.UserInfoService;

/**
 * @Title:HomeController
 * @Description:	
 * @Author hjp	
 * @Date 2018年6月1日
 */
@Controller
public class HomeController {
	
	private static final Logger log = LoggerFactory.getLogger(HomeController.class);

	@Autowired
	private UserInfoService userInfoService;
	@RequestMapping({"/","/index"})
    public String index(){
       return "login/index";
    }
   
    @RequestMapping(value="/login")
    public String login(HttpServletRequest request,Map<String,Object> map){
    	// 登录失败从request中获取shiro处理的异常信息。  
        // shiroLoginFailure:就是shiro异常类的全类名. 
    	String exception = (String) request.getAttribute("shiroLoginFailure");
    	String msg = "";
    	if (exception != null) {
    		if (UnknownAccountException.class.getName().equals(exception)) {  
    			log.info("UnknownAccountException -- > 账号不存在：");  
                msg = "UnknownAccountException -- > 账号不存在：";  
             } else if (IncorrectCredentialsException.class.getName().equals(exception)) {  
            	log.info("IncorrectCredentialsException -- > 密码不正确：");  
                msg = "IncorrectCredentialsException -- > 密码不正确：";  
             } else if ("kaptchaValidateFailed".equals(exception)) {  
            	log.info("kaptchaValidateFailed -- > 验证码错误");  
                msg = "kaptchaValidateFailed -- > 验证码错误";  
             } else {  
                msg = "else >> "+exception;  
                log.info("else -- >" + exception);  
             }  
    	}
    	  map.put("msg", msg); 
         return "login/login";
    }

}
